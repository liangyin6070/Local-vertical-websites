<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.liupro.web.manage.dao.SystemRoleMapper" >
  <resultMap id="BaseResultMap" type="com.liupro.web.manage.model.SystemRole" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="role_code" property="roleCode" jdbcType="VARCHAR" />
    <result column="publish_status" property="publishStatus" jdbcType="BIT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, role_name, role_code, publish_status, remark
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from system_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <!-- 根据账号查询角色值 -->
  <select id="selectByUserName" resultType="java.lang.String" parameterType="java.lang.String" >
    SELECT role.role_code FROM system_role role
    LEFT join system_user_role ur ON role.id = ur.role_id
    LEFT join system_user user ON ur.user_id = user.id
    WHERE user.user_name = #{userName,jdbcType=VARCHAR} AND role.publish_status = 1
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from system_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.liupro.web.manage.model.SystemRole" >
    insert into system_role (id, role_name, role_code, 
      publish_status, remark)
    values (#{id,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{roleCode,jdbcType=VARCHAR}, 
      #{publishStatus,jdbcType=BIT}, #{remark,jdbcType=VARCHAR})
  </insert>
  
  <insert id="insertSelective" parameterType="com.liupro.web.manage.model.SystemRole" >
    insert into system_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="roleCode != null" >
        role_code,
      </if>
      <if test="publishStatus != null" >
        publish_status,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null" >
        #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="publishStatus != null" >
        #{publishStatus,jdbcType=BIT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.liupro.web.manage.model.SystemRole" >
    update system_role
    <set >
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null" >
        role_code = #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="publishStatus != null" >
        publish_status = #{publishStatus,jdbcType=BIT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.liupro.web.manage.model.SystemRole" >
    update system_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_code = #{roleCode,jdbcType=VARCHAR},
      publish_status = #{publishStatus,jdbcType=BIT},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>